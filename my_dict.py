# Примеры использования словарей в Python

# 1. Создание словаря
print("=== Пример 1: Создание словарей ===")
# Пустой словарь
empty_dict = {}
print("Пустой словарь:", empty_dict)

# Словарь с данными
person = {"имя": "Алексей", "возраст": 25, "город": "Москва"}
print("Словарь с данными:", person)

# Создание через dict()
dict_from_list = dict([("ключ1", "значение1"), ("ключ2", "значение2")])
print("Словарь из списка кортежей:", dict_from_list)

# 2. Добавление и обновление элементов
print("\n=== Пример 2: Добавление и обновление ===")
person = {"имя": "Алексей", "возраст": 25}
print("Исходный словарь:", person)

# Добавление нового ключа
person["профессия"] = "Программист"
print("После добавления профессии:", person)

# Обновление существующего ключа
person["возраст"] = 26
print("После обновления возраста:", person)

# 3. Доступ к значению
print("\n=== Пример 3: Доступ к значению ===")
print("Имя:", person["имя"])  # Прямой доступ по ключу

# Безопасный доступ с get()
print("Город (через get):", person.get("город", "Не указан"))  # Если ключа нет, возвращает "Не указан"
print("Телефон (через get):", person.get("телефон", "Не указан"))  # Ключа нет

# 4. Удаление элементов
print("\n=== Пример 4: Удаление элементов ===")
person = {"имя": "Алексей", "возраст": 25, "город": "Москва"}
print("Исходный словарь:", person)

# Удаление конкретного ключа
del person["город"]
print("После удаления города:", person)

# Очистка словаря
person.clear()
print("После очистки:", person)

# 5. Проверка наличия ключа
print("\n=== Пример 5: Проверка наличия ключа ===")
person = {"имя": "Алексей", "возраст": 25}
key = "имя"
if key in person:
    print(f"Ключ '{key}' найден, значение:", person[key])
else:
    print(f"Ключ '{key}' не найден")

# 6. Перебор словаря
print("\n=== Пример 6: Перебор словаря ===")
person = {"имя": "Алексей", "возраст": 25, "город": "Москва"}

# Перебор ключей
print("Ключи:")
for key in person:
    print(key)

# Перебор значений
print("Значения:")
for value in person.values():
    print(value)

# Перебор пар ключ-значение
print("Пары ключ-значение:")
for key, value in person.items():
    print(f"{key}: {value}")

# 7. Вложенные словари
print("\n=== Пример 7: Вложенные словари ===")
students = {
    "студент1": {"имя": "Анна", "возраст": 20, "курс": 2},
    "студент2": {"имя": "Иван", "возраст": 21, "курс": 3}
}
print("Вложенный словарь:", students)
print("Имя студента1:", students["студент1"]["имя"])

# 8. Функция со словарём
print("\n=== Пример 8: Функция со словарём ===")
def print_person_info(person_dict):
    for key, value in person_dict.items():
        print(f"{key}: {value}")

person = {"имя": "Мария", "возраст": 30, "город": "Санкт-Петербург"}
print_person_info(person)

# 9. Генератор словаря
print("\n=== Пример 9: Генератор словаря ===")
squares_dict = {i: i * i for i in range(1, 5)}
print("Словарь с квадратами чисел:", squares_dict)

# 10. Обработка ошибки доступа к несуществующему ключу
print("\n=== Пример 10: Обработка ошибки доступа ===")
person = {"имя": "Алексей", "возраст": 25}
try:
    print(person["телефон"])  # Ошибка, так как ключа нет
except KeyError:
    print("Ключ 'телефон' не найден!")

# 11. Получение всех ключей и значений
print("\n=== Пример 11: Получение всех ключей и значений ===")
person = {"имя": "Алексей", "возраст": 25, "город": "Москва"}
print("Все ключи:", list(person.keys()))
print("Все значения:", list(person.values()))